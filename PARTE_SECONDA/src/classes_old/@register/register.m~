classdef register < flip_flop
    % register class describes a register realized with several d-ff in
    % master slave configuration, everything is obtained with nand2 gates,
    % thus the class inherits properties and methods from father class
    % flip_flop which inherits properties and methods from father class
    % nand2. The class describes the circuit in terms of delay,power and
    % area. It starts from technological parameters of HP, LOP and LSTP
    % devices, present in IRDS 2010. The user need to specify the pull-down
    % width Wn, followed by  the parallelism of data.
    
    properties
        bit_width {mustBeInteger}; % parallelism
	end
	
    methods
        % Constructor
        function obj = register(nMOS_width, n_bit)
            % Constructor of father class flip_flop
            obj = obj@flip_flop(nMOS_width);
            obj.bit_width = n_bit;
		end
		
		% Delay evaluation
        function [Tdp_HP_reg, Tdp_LOP_reg, Tdp_LSTP_reg] = delay(obj)
            [Tdp_HP_ff, Tdp_LOP_ff, Tdp_LSTP_ff] = delay@flip_flop(obj);
            % HP
            Tdp_HP_reg = Tdp_HP_ff; % [s]
            % LOP
            Tdp_LOP_reg = Tdp_LOP_ff; % [s]
            % LSTP
            Tdp_LSTP_reg = Tdp_LSTP_ff; % [s]
		end
		
		% Area evaluation
        function [A_HP_ff, A_LOP_ff, A_LSTP_ff] = area(obj)
            [A_HP_nd2, A_LOP_nd2, A_LSTP_nd2] = area@nand2(obj);
            % HP
            A_HP_ff = 11 * A_HP_nd2; % [um^2]
            % LOP
            A_LOP_ff = 11 * A_LOP_nd2; % [um^2]
            % LSTP
            A_LSTP_ff = 11 * A_LSTP_nd2; % [um^2]
        end
        
        
    end
end


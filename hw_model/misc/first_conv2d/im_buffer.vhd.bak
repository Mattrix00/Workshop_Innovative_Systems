library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.fixed_pkg.all;
use work.param.all; 

entity im_buffer is
generic ( qi : natural := 8 ; qf : natural := 8) ; 
port ( 
		ck			: in std_logic; 
		rstn 		: in std_logic;
		en			: in std_logic; 
		din		: in 	imap; 
		dout 		: out imap); 
end entity; 

architecture behavior of im_buffer is

component regn
generic ( qi : natural:= 1; qf : natural:= 15 ) ;	
port (
			d 		:	in sfixed(qi-1 downto -qf);
			ck 	:	in std_logic;  
			rstn	:	in std_logic;  
			en		:	in std_logic;
			q  	:  out sfixed(qi-1 downto -qf));
end component; 

signal data : imap ;

begin

process (ck)
begin
if rising_edge(ck) then
	if rstn = '0' then 
		data <= (others=>others=>'0');
	else
		for i in 0 to 30 loop
			data(i+1) <= data(i);
		end loop;
	end if; 
end if;   
end process; 

data(0) 	<= din; 
data(31) <= dout; 



end architecture; 






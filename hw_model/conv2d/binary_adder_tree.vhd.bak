library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity binary_adder_tree is

	port
	(
		a	   : in unsigned (7 downto 0);
		b	   : in unsigned (7 downto 0);
		c	   : in unsigned (7 downto 0);
		d	   : in unsigned (7 downto 0);
		e	   : in unsigned (7 downto 0);
		clk	   : in std_logic;
		result : out unsigned (7 downto 0)
	);
	
end entity;

architecture rtl of binary_adder_tree is

	-- Declare registers to hold intermediate sums
	signal sum1, sum2, sum3 : unsigned (7 downto 0);

begin
	
	process (clk)
	begin
		if (rising_edge(clk)) then
		
			-- Generate and store intermediate values in the pipeline
			sum1 <= a + b;
			sum2 <= c + d;
			sum3 <= sum1 + sum2;
			
			-- Generate and store the last value, the result
			result <= sum3 + e;
		
		end if;
	end process;
	
end rtl;
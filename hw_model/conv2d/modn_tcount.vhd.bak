library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

-- every n clock_cycle enable output for clk_period

entity modn_tcount is
generic (n: integer := 50000000); 
port ( 
       en, Reset_n, Clock : in std_logic;
       TC : out std_logic);            
		  
end modn_tcount;

architecture behavior of modn_tcount is

signal cnt : integer := 0;  

begin

process(Clock)
begin
clk: if (Clock'event and Clock = '1') then 

 rst: if  Reset_n = '0' then   
 
		         cnt <=  0 ; 
               TC   <= '0';   -- synchronous rst  
      
		elsif EN = '1' then
		
	check_cnt: if cnt = (n - 1) then 
	
	              TC <= '1';  -- terminal count
			        cnt <= 0 ;  -- cnt re-start
		        else 
		           cnt <= cnt + 1;  -- update counter
                 TC  <= '0'; 
				
	     end if check_cnt;
   end if rst;
end if clk; 
end process; 

end behavior; 
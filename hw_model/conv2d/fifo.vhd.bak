library ieee;
use ieee.std_logic_1164.all;
use work.fixed_pkg.all;

entity fifo is
generic map ( qi : natural := 8; qf : natural := 8, dim : natural :=5 );
port (
			din  		: in  sfixed(qi-1 downto -qf );
			ck, rstn : in  std_logic; 
			dout 		: out sfixed(qi-1 downto -qf )); 
end entity; 

architecture behavior of fifo is

type word is array in 0 to (dim-1) of sfixed(qi-1 downto -qf);
signal ptr : word; 

begin

process(ck, rstn):
begin
if rstn = '0' then 
	ptr => (others=>(others=>'0'));
else	
	if ck'event and ck='1' then
		for i in 0 to dim-1 loop
			ptr(i) 	<= din; 
			ptr(i+1)	<= ptr(i);
		end loop;
	end if;
end if; 
end process;

dout <= ptr(dim-1);

end architecture behavior; 

